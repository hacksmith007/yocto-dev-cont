#!/bin/bash

echo "üîç Checking submodules against local base branch from main repo..."

ROOT_DIR=$(pwd)

# Define colors for output
COLOR_LIGHT_BLUE='\033[1;34m'
COLOR_RED='\033[0;31m'
COLOR_GREEN='\033[0;32m'
COLOR_YELLOW='\033[1;33m'  # Yellow color for branch name
COLOR_RESET='\033[0m'

# Get base branch from the main repo
base_branch=$(git rev-parse --abbrev-ref HEAD)
echo "üìå Base branch (main repo): $base_branch"

# Function to check a single submodule repo
check_repo() {
  local path=$1
  local repo_name=$(basename "$path")

  # Only print repo once
  echo -e "\nüåé Repo: $repo_name"

  if ! git -C "$path" rev-parse > /dev/null 2>&1; then
    echo "‚ùå Not a valid Git repo: $path"
    return
  fi

  cd "$path" || return

  local branch
  branch=$(git rev-parse --abbrev-ref HEAD)
  local commit_id
  commit_id=$(git rev-parse HEAD)

  # Only compare if submodule has the base branch locally
  if git show-ref --verify --quiet "refs/heads/$base_branch"; then
    local counts
    counts=$(git rev-list --left-right --count "$branch...$base_branch")
    local ahead behind
    ahead=$(echo "$counts" | awk '{print $1}')
    behind=$(echo "$counts" | awk '{print $2}')

    # Correct output format with colors
    if [ "$ahead" -gt 0 ]; then
      echo -e "üå¥ Checked-out Branch: ${COLOR_YELLOW}$branch${COLOR_RESET} is ${COLOR_LIGHT_BLUE}ahead${COLOR_RESET} by $ahead commit(s)"
      echo "üîñ Commit ID: $commit_id"
    elif [ "$behind" -gt 0 ]; then
      echo -e "üå¥ Checked-out Branch: ${COLOR_YELLOW}$branch${COLOR_RESET} is ${COLOR_RED}behind${COLOR_RESET} by $behind commit(s)"
      echo "üîñ Commit ID: $commit_id"
    else
      echo -e "üå¥ Checked-out Branch: ${COLOR_YELLOW}$branch${COLOR_RESET} is ${COLOR_GREEN}in sync${COLOR_RESET} with the base branch"
      echo "üîñ Commit ID: $commit_id"
    fi
  else
    echo "‚ÄºÔ∏è Local branch '$base_branch' not found in this submodule"
  fi

  cd "$ROOT_DIR" || exit
}

# Get all submodules from .gitmodules
submodules=$(git config --file .gitmodules --get-regexp path | awk '{ print $2 }')

for path in $submodules; do
  full_path="$ROOT_DIR/$path"
  check_repo "$full_path"
done